{"version":3,"file":"SnapchatLogo.esm.js","sources":["../../src/icons/SnapchatLogo.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <path\n      d=\"M18.52262,188.68274S72,163.9473,72,80a56,56,0,0,1,112,0c0,83.94728,53.47772,108.6824,53.47772,108.6824-9.25514,8.68693-28.93167,3.38673-40.13691,9.55547-11.03868,6.077-17.07266,25.58078-29.56764,28.77765C155.6908,230.10684,141.04586,216,128,216s-27.6905,14.10686-39.77275,11.01563C75.73218,223.81879,69.69808,204.315,58.65931,198.238,47.45415,192.06928,27.77771,197.36958,18.52262,188.68274Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"189.3256\"\n      y1=\"122.66978\"\n      x2=\"216\"\n      y2=\"112.00002\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"66.67601\"\n      y1=\"122.67043\"\n      x2=\"40\"\n      y2=\"112.00002\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M18.52262,188.68274S72,163.9473,72,80a56,56,0,0,1,112,0c0,83.94728,53.47772,108.6824,53.47772,108.6824-9.25514,8.68693-28.93167,3.38673-40.13691,9.55547-11.03868,6.077-17.07266,25.58078-29.56764,28.77765C155.6908,230.10684,141.04586,216,128,216s-27.6905,14.10686-39.77275,11.01563C75.73218,223.81879,69.69808,204.315,58.65931,198.238,47.45415,192.06928,27.77771,197.36958,18.52262,188.68274Z\"\n      opacity=\"0.2\"\n    />\n    <path\n      d=\"M18.52262,188.68274S72,163.9473,72,80a56,56,0,0,1,112,0c0,83.94728,53.47772,108.6824,53.47772,108.6824-9.25514,8.68693-28.93167,3.38673-40.13691,9.55547-11.03868,6.077-17.07266,25.58078-29.56764,28.77765C155.6908,230.10684,141.04586,216,128,216s-27.6905,14.10686-39.77275,11.01563C75.73218,223.81879,69.69808,204.315,58.65931,198.238,47.45415,192.06928,27.77771,197.36958,18.52262,188.68274Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"189.3256\"\n      y1=\"122.66978\"\n      x2=\"216\"\n      y2=\"112.00002\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"66.67601\"\n      y1=\"122.67043\"\n      x2=\"40\"\n      y2=\"112.00002\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M242.95264,194.51565c-7.17285,6.73242-17.44434,7.418-26.50684,8.02343-5.77881.38575-11.75391.78418-15.24658,2.707-3.37012,1.85546-6.84522,6.61914-10.20557,11.22558-5.40674,7.41113-11.53418,15.81152-21.2373,18.29395-9.356,2.39648-18.584-1.90625-26.72608-5.70118C137.688,226.57424,132.16357,224,128,224c-4.16309,0-9.6875,2.57422-15.02979,5.06445-6.51074,3.03321-13.71728,6.39161-21.126,6.39161a22.48462,22.48462,0,0,1-5.59961-.69043c-9.70361-2.48243-15.83154-10.88282-21.23877-18.29493-3.36035-4.60546-6.835-9.36914-10.20459-11.2246-3.49268-1.92286-9.46826-2.32129-15.24658-2.707-9.0625-.60546-19.334-1.291-26.50684-8.02343a7.99944,7.99944,0,0,1,2.085-13.07911c.27149-.13085,12.46192-6.085,24.44629-21.32324a107.03319,107.03319,0,0,0,17.35156-32.72558l-19.90136-7.96a7.99977,7.99977,0,0,1,5.9414-14.85547L61.023,111.793A163.22264,163.22264,0,0,0,64,80a64,64,0,0,1,128,0,163.22264,163.22264,0,0,0,2.977,31.793l18.05176-7.2207a8,8,0,0,1,5.94238,14.85547l-19.90137,7.96093a107.023,107.023,0,0,0,17.35157,32.72461c12.05957,15.334,24.32763,21.2666,24.45019,21.3252a8.021,8.021,0,0,1,2.08106,13.07715Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M18.52262,188.68274S72,163.9473,72,80a56,56,0,0,1,112,0c0,83.94728,53.47772,108.6824,53.47772,108.6824-9.25514,8.68693-28.93167,3.38673-40.13691,9.55547-11.03868,6.077-17.07266,25.58078-29.56764,28.77765C155.6908,230.10684,141.04586,216,128,216s-27.6905,14.10686-39.77275,11.01563C75.73218,223.81879,69.69808,204.315,58.65931,198.238,47.45415,192.06928,27.77771,197.36958,18.52262,188.68274Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"189.3256\"\n      y1=\"122.66978\"\n      x2=\"216\"\n      y2=\"112.00002\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"66.67601\"\n      y1=\"122.67043\"\n      x2=\"40\"\n      y2=\"112.00002\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M18.52262,188.68274S72,163.9473,72,80a56,56,0,0,1,112,0c0,83.94728,53.47772,108.6824,53.47772,108.6824-9.25514,8.68693-28.93167,3.38673-40.13691,9.55547-11.03868,6.077-17.07266,25.58078-29.56764,28.77765C155.6908,230.10684,141.04586,216,128,216s-27.6905,14.10686-39.77275,11.01563C75.73218,223.81879,69.69808,204.315,58.65931,198.238,47.45415,192.06928,27.77771,197.36958,18.52262,188.68274Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"189.3256\"\n      y1=\"122.66978\"\n      x2=\"216\"\n      y2=\"112.00002\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"66.67601\"\n      y1=\"122.67043\"\n      x2=\"40\"\n      y2=\"112.00002\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M18.52262,188.68274S72,163.9473,72,80a56,56,0,0,1,112,0c0,83.94728,53.47772,108.6824,53.47772,108.6824-9.25514,8.68693-28.93167,3.38673-40.13691,9.55547-11.03868,6.077-17.07266,25.58078-29.56764,28.77765C155.6908,230.10684,141.04586,216,128,216s-27.6905,14.10686-39.77275,11.01563C75.73218,223.81879,69.69808,204.315,58.65931,198.238,47.45415,192.06928,27.77771,197.36958,18.52262,188.68274Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"189.3256\"\n      y1=\"122.66978\"\n      x2=\"216\"\n      y2=\"112.00002\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"66.67601\"\n      y1=\"122.67043\"\n      x2=\"40\"\n      y2=\"112.00002\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst SnapchatLogo = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nSnapchatLogo.displayName = \"SnapchatLogo\";\n\nexport default SnapchatLogo;\n"],"names":["pathsByWeight","Map","set","color","React","d","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","x1","y1","x2","y2","opacity","renderPath","weight","renderPathForWeight","SnapchatLogo","forwardRef","props","ref","IconBase","displayName"],"mappings":"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"}