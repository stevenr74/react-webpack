{"version":3,"file":"PhoneSlash.esm.js","sources":["../../src/icons/PhoneSlash.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <line\n      x1=\"48\"\n      y1=\"40\"\n      x2=\"208\"\n      y2=\"216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M114.9947,113.69328a83.97034,83.97034,0,0,0-14.728,3.68282,7.92755,7.92755,0,0,0-5.1169,5.95455l-5.89824,29.5076a8,8,0,0,1-4.87369,5.85972L37.06532,177.623a7.97345,7.97345,0,0,1-9.2595-2.47378,48.00881,48.00881,0,0,1,4.02766-63.31573,135.45028,135.45028,0,0,1,51.9466-32.47622\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M131.18495,72.03707a135.5393,135.5393,0,0,1,92.98157,39.79641,48.00881,48.00881,0,0,1,4.02766,63.31573,7.8198,7.8198,0,0,1-1.76283,1.66165\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M155.371,117.25063a84.3478,84.3478,0,0,0-55.10429.12547,7.92755,7.92755,0,0,0-5.1169,5.95455l-5.89824,29.5076a8,8,0,0,1-4.87369,5.85972L37.06532,177.623a7.97345,7.97345,0,0,1-9.2595-2.47378,48.00881,48.00881,0,0,1,4.02766-63.31573,136,136,0,0,1,192.333,0,48.00881,48.00881,0,0,1,4.02766,63.31573,7.97345,7.97345,0,0,1-9.2595,2.47378l-47.35377-18.94151a8,8,0,0,1-4.85991-5.79231L160.51024,123.151A7.9287,7.9287,0,0,0,155.371,117.25063Z\"\n      opacity=\"0.2\"\n    />\n    <line\n      x1=\"48\"\n      y1=\"40\"\n      x2=\"208\"\n      y2=\"216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M114.9947,113.69328a83.97034,83.97034,0,0,0-14.728,3.68282,7.92755,7.92755,0,0,0-5.1169,5.95455l-5.89824,29.5076a8,8,0,0,1-4.87369,5.85972L37.06532,177.623a7.97345,7.97345,0,0,1-9.2595-2.47378,48.00881,48.00881,0,0,1,4.02766-63.31573,135.45028,135.45028,0,0,1,51.9466-32.47622\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M120.52563,72.20427a135.66,135.66,0,0,1,103.64089,39.62921,48.00881,48.00881,0,0,1,4.02766,63.31573,7.97345,7.97345,0,0,1-9.2595,2.47378l-4.04895-1.61958\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <g>\n      <path d=\"M120.8877,108.28271c-.01416-.01562-.02832-.03173-.043-.04736l-31.083-34.19092c-.01611-.01855-.03272-.03613-.04883-.0542l-35.793-39.37207A8.0006,8.0006,0,1,0,42.08008,45.38184L70.03857,76.13623a142.75371,142.75371,0,0,0-43.86279,30.04053,56.07211,56.07211,0,0,0-4.69043,73.87695,16.03254,16.03254,0,0,0,18.55078,4.99707L87.35059,166.125a15.94917,15.94917,0,0,0,9.74609-11.71875l5.90527-29.51172a76.1958,76.1958,0,0,1,9.07422-2.51709l90.00391,99.0044a8.0006,8.0006,0,1,0,11.83984-10.76368Z\" />\n      <path d=\"M229.82422,106.17578a144.20418,144.20418,0,0,0-109.73633-41.96A8.00053,8.00053,0,0,0,114.60547,77.585l94.36035,103.79883a8.0075,8.0075,0,0,0,2.94824,2.04687l4.04883,1.62012a16.03429,16.03429,0,0,0,18.55273-4.99805A56.07343,56.07343,0,0,0,229.82422,106.17578Z\" />\n    </g>\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <line\n      x1=\"48\"\n      y1=\"40\"\n      x2=\"208\"\n      y2=\"216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M114.9947,113.69328a83.97034,83.97034,0,0,0-14.728,3.68282,7.92755,7.92755,0,0,0-5.1169,5.95455l-5.89824,29.5076a8,8,0,0,1-4.87369,5.85972L37.06532,177.623a7.97345,7.97345,0,0,1-9.2595-2.47378,48.00881,48.00881,0,0,1,4.02766-63.31573,135.45028,135.45028,0,0,1,51.9466-32.47622\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M120.52563,72.20427a135.66,135.66,0,0,1,103.64089,39.62921,48.00881,48.00881,0,0,1,4.02766,63.31573,7.97345,7.97345,0,0,1-9.2595,2.47378l-4.04895-1.61958\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <line\n      x1=\"48\"\n      y1=\"40\"\n      x2=\"208\"\n      y2=\"216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M114.9947,113.69328a83.97034,83.97034,0,0,0-14.728,3.68282,7.92755,7.92755,0,0,0-5.1169,5.95455l-5.89824,29.5076a8,8,0,0,1-4.87369,5.85972L37.06532,177.623a7.97345,7.97345,0,0,1-9.2595-2.47378,48.00881,48.00881,0,0,1,4.02766-63.31573,135.45028,135.45028,0,0,1,51.9466-32.47622\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M120.52563,72.20427a135.66,135.66,0,0,1,103.64089,39.62921,48.00881,48.00881,0,0,1,4.02766,63.31573,7.97345,7.97345,0,0,1-9.2595,2.47378l-4.04895-1.61958\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <line\n      x1=\"48\"\n      y1=\"40\"\n      x2=\"208\"\n      y2=\"216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M114.9947,113.69328a83.97034,83.97034,0,0,0-14.728,3.68282,7.92755,7.92755,0,0,0-5.1169,5.95455l-5.89824,29.5076a8,8,0,0,1-4.87369,5.85972L37.06532,177.623a7.97345,7.97345,0,0,1-9.2595-2.47378,48.00881,48.00881,0,0,1,4.02766-63.31573,135.45028,135.45028,0,0,1,51.9466-32.47622\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M120.52563,72.20427a135.66,135.66,0,0,1,103.64089,39.62921,48.00881,48.00881,0,0,1,4.02766,63.31573,7.97345,7.97345,0,0,1-9.2595,2.47378l-4.04895-1.61958\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst PhoneSlash = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nPhoneSlash.displayName = \"PhoneSlash\";\n\nexport default PhoneSlash;\n"],"names":["pathsByWeight","Map","set","color","React","x1","y1","x2","y2","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","opacity","renderPath","weight","renderPathForWeight","PhoneSlash","forwardRef","props","ref","IconBase","displayName"],"mappings":"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"}