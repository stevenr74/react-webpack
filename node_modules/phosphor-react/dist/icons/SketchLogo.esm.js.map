{"version":3,"file":"SketchLogo.esm.js","sources":["../../src/icons/SketchLogo.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <polygon\n      points=\"72 40 184 40 240 104 128 224 16 104 72 40\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <polygon\n      points=\"177.091 104 128 224 78.909 104 128 40 177.091 104\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"16\"\n      y1=\"104\"\n      x2=\"240\"\n      y2=\"104\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <polygon\n      points=\"184 40 128 40 78.909 104 128 224 240 104 184 40\"\n      opacity=\"0.2\"\n    />\n    <polygon\n      points=\"72 40 184 40 240 104 128 224 16 104 72 40\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polygon\n      points=\"177.091 104 128 224 78.909 104 128 40 177.091 104\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"16\"\n      y1=\"104\"\n      x2=\"240\"\n      y2=\"104\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <g id=\"Raw\">\n      <path d=\"M247.98926,103.783c-.00488-.16467-.01074-.3291-.02539-.49317-.00977-.11059-.02442-.21948-.03907-.32873-.01806-.14075-.03808-.28088-.064-.42053-.022-.11878-.04736-.23584-.07471-.35254-.02978-.12793-.062-.25488-.09814-.38147q-.05054-.17909-.10938-.35437c-.041-.12146-.08545-.24146-.13232-.36133-.04492-.1156-.09131-.23022-.1416-.34314-.05225-.1178-.10987-.23328-.168-.349-.05567-.10986-.11133-.21924-.17139-.32593-.063-.11181-.13183-.22119-.20068-.33056-.0669-.10572-.1333-.21143-.20459-.31385-.07178-.1029-.14942-.20275-.22656-.303-.07911-.10242-.15772-.20472-.24121-.3031-.02491-.02955-.04639-.061-.07178-.09034l-56-64A8.001,8.001,0,0,0,184,32H72a8.001,8.001,0,0,0-6.02051,2.73193l-56,64c-.02539.0293-.04687.06079-.07178.09034-.08349.09838-.1621.20068-.24121.3031-.07714.10022-.15478.20007-.22656.303-.07129.10242-.13769.20813-.20459.31385-.06885.10937-.13769.21875-.20068.33056-.06006.10669-.11572.21607-.17139.32593-.0581.11572-.11572.2312-.168.349-.05029.11292-.09668.22754-.1416.34314-.04687.11987-.09131.23987-.13232.36133q-.05861.17541-.10938.35437c-.03613.12659-.06836.25354-.09814.38147-.02735.1167-.05274.23376-.07471.35254-.02588.13965-.0459.27978-.064.42053-.01465.10925-.0293.21814-.03907.32873-.01465.16407-.02051.3285-.02539.49317-.002.07275-.01074.1438-.01074.217,0,.02014.00293.03955.00293.05957.00146.197.01416.39355.02978.58984.00538.06238.00538.126.01172.18775q.03882.3717.1128.73938c.022.11.05322.21643.07959.32483.03369.13684.06445.27392.10547.40918.03515.11779.07861.23169.11914.347.04345.12293.085.24622.13476.36731.0459.11267.09815.22168.14942.33155.05517.12011.11035.23986.17236.35754.05566.1062.1167.20886.17676.31213.06689.1145.13379.22876.207.34058.06689.10266.13867.20166.21.3009.07617.10535.15234.21033.23389.31275.07959.09961.16308.19519.24707.29089.0542.06177.10253.12683.15869.18726l112,120c.11377.12158.2373.2312.35742.345.05615.0531.1084.10937.1665.16089a7.99282,7.99282,0,0,0,.81006.634c.06348.0437.13037.08154.19531.12329a7.94976,7.94976,0,0,0,.7295.416c.081.041.16113.08325.24414.12146a8.02746,8.02746,0,0,0,.96045.37487c.04736.0149.09716.02417.145.03809a7.97556,7.97556,0,0,0,.89062.20349c.09424.01624.18848.03137.28369.04419a7.12355,7.12355,0,0,0,2.13184,0c.09521-.01282.18945-.028.28369-.04419a7.97556,7.97556,0,0,0,.89062-.20349c.04786-.01392.09766-.02319.145-.03809a8.02746,8.02746,0,0,0,.96045-.37487c.083-.03821.16309-.08045.24414-.12146a7.94976,7.94976,0,0,0,.7295-.416c.06494-.04175.13183-.07959.19531-.12329a7.99282,7.99282,0,0,0,.81006-.634c.0581-.05152.11035-.10779.1665-.16089.12012-.11377.24365-.22339.35742-.345l112-120c.05616-.06031.10449-.12525.15821-.187.08447-.0957.168-.1914.24755-.29113.08155-.10242.15772-.2074.23389-.31275.07129-.09924.14307-.19824.21-.3009.07324-.11182.14014-.22608.207-.34058.06006-.10327.1211-.20593.17676-.31213.062-.11768.11719-.23743.17236-.35754.05127-.10987.10352-.21888.14942-.33155.0498-.12109.09131-.24438.13476-.36731.04053-.11535.084-.22925.11914-.347.041-.13526.07178-.27234.10547-.40918.02637-.1084.05762-.21485.07959-.32483q.074-.3673.1128-.73938c.00634-.06177.00634-.12537.01172-.18775.01562-.19629.02832-.39282.02978-.58984,0-.02.00293-.03943.00293-.05957C248,103.92676,247.99121,103.85571,247.98926,103.783ZM75.62988,48h36.15137L74.96289,96H33.63037ZM34.40967,112h39.1289l30.53418,74.63892Zm117.51758,74.63892L182.46143,112h39.1289ZM181.03711,96,144.21875,48h36.15137l41.99951,48Z\" />\n    </g>\n    <g id=\"Flat\">\n      <path d=\"M247.98926,103.783c-.00488-.16467-.01074-.3291-.02539-.49317-.00977-.11059-.02442-.21948-.03907-.32873-.01806-.14075-.03808-.28088-.064-.42053-.022-.11878-.04736-.23584-.07471-.35254-.02978-.12793-.062-.25488-.09814-.38147q-.05054-.17909-.10938-.35437c-.041-.12146-.08545-.24146-.13232-.36133-.04492-.1156-.09131-.23022-.1416-.34314-.05225-.1178-.10987-.23328-.168-.349-.05567-.10986-.11133-.21924-.17139-.32593-.063-.11181-.13183-.22119-.20068-.33056-.0669-.10572-.1333-.21143-.20459-.31385-.07178-.1029-.14942-.20275-.22656-.303-.07911-.10242-.15772-.20472-.24121-.3031-.02491-.02955-.04639-.061-.07178-.09034l-56-64A8.001,8.001,0,0,0,184,32H72a8.001,8.001,0,0,0-6.02051,2.73193l-56,64c-.02539.0293-.04687.06079-.07178.09034-.08349.09838-.1621.20068-.24121.3031-.07714.10022-.15478.20007-.22656.303-.07129.10242-.13769.20813-.20459.31385-.06885.10937-.13769.21875-.20068.33056-.06006.10669-.11572.21607-.17139.32593-.0581.11572-.11572.2312-.168.349-.05029.11292-.09668.22754-.1416.34314-.04687.11987-.09131.23987-.13232.36133q-.05861.17541-.10938.35437c-.03613.12659-.06836.25354-.09814.38147-.02735.1167-.05274.23376-.07471.35254-.02588.13965-.0459.27978-.064.42053-.01465.10925-.0293.21814-.03907.32873-.01465.16407-.02051.3285-.02539.49317-.002.07275-.01074.1438-.01074.217,0,.02014.00293.03955.00293.05957.00146.197.01416.39355.02978.58984.00538.06238.00538.126.01172.18775q.03882.3717.1128.73938c.022.11.05322.21643.07959.32483.03369.13684.06445.27392.10547.40918.03515.11779.07861.23169.11914.347.04345.12293.085.24622.13476.36731.0459.11267.09815.22168.14942.33155.05517.12011.11035.23986.17236.35754.05566.1062.1167.20886.17676.31213.06689.1145.13379.22876.207.34058.06689.10266.13867.20166.21.3009.07617.10535.15234.21033.23389.31275.07959.09961.16308.19519.24707.29089.0542.06177.10253.12683.15869.18726l112,120c.11377.12158.2373.2312.35742.345.05615.0531.1084.10937.1665.16089a7.99282,7.99282,0,0,0,.81006.634c.06348.0437.13037.08154.19531.12329a7.94976,7.94976,0,0,0,.7295.416c.081.041.16113.08325.24414.12146a8.02746,8.02746,0,0,0,.96045.37487c.04736.0149.09716.02417.145.03809a7.97556,7.97556,0,0,0,.89062.20349c.09424.01624.18848.03137.28369.04419a7.12355,7.12355,0,0,0,2.13184,0c.09521-.01282.18945-.028.28369-.04419a7.97556,7.97556,0,0,0,.89062-.20349c.04786-.01392.09766-.02319.145-.03809a8.02746,8.02746,0,0,0,.96045-.37487c.083-.03821.16309-.08045.24414-.12146a7.94976,7.94976,0,0,0,.7295-.416c.06494-.04175.13183-.07959.19531-.12329a7.99282,7.99282,0,0,0,.81006-.634c.0581-.05152.11035-.10779.1665-.16089.12012-.11377.24365-.22339.35742-.345l112-120c.05616-.06031.10449-.12525.15821-.187.08447-.0957.168-.1914.24755-.29113.08155-.10242.15772-.2074.23389-.31275.07129-.09924.14307-.19824.21-.3009.07324-.11182.14014-.22608.207-.34058.06006-.10327.1211-.20593.17676-.31213.062-.11768.11719-.23743.17236-.35754.05127-.10987.10352-.21888.14942-.33155.0498-.12109.09131-.24438.13476-.36731.04053-.11535.084-.22925.11914-.347.041-.13526.07178-.27234.10547-.40918.02637-.1084.05762-.21485.07959-.32483q.074-.3673.1128-.73938c.00634-.06177.00634-.12537.01172-.18775.01562-.19629.02832-.39282.02978-.58984,0-.02.00293-.03943.00293-.05957C248,103.92676,247.99121,103.85571,247.98926,103.783ZM75.62988,48h36.15137L74.96289,96H33.63037ZM34.40967,112h39.1289l30.53418,74.63892Zm117.51758,74.63892L182.46143,112h39.1289ZM181.03711,96,144.21875,48h36.15137l41.99951,48Z\" />\n    </g>\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <polygon\n      points=\"72 40 184 40 240 104 128 224 16 104 72 40\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <polygon\n      points=\"177.091 104 128 224 78.909 104 128 40 177.091 104\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"16\"\n      y1=\"104\"\n      x2=\"240\"\n      y2=\"104\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <polygon\n      points=\"72 40 184 40 240 104 128 224 16 104 72 40\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <polygon\n      points=\"177.091 104 128 224 78.909 104 128 40 177.091 104\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"16\"\n      y1=\"104\"\n      x2=\"240\"\n      y2=\"104\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <polygon\n      points=\"72 40 184 40 240 104 128 224 16 104 72 40\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polygon\n      points=\"177.091 104 128 224 78.909 104 128 40 177.091 104\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"16\"\n      y1=\"104\"\n      x2=\"240\"\n      y2=\"104\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst SketchLogo = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nSketchLogo.displayName = \"SketchLogo\";\n\nexport default SketchLogo;\n"],"names":["pathsByWeight","Map","set","color","React","points","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","x1","y1","x2","y2","opacity","id","d","renderPath","weight","renderPathForWeight","SketchLogo","forwardRef","props","ref","IconBase","displayName"],"mappings":"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"}