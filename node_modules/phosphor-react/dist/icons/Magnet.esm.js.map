{"version":3,"file":"Magnet.esm.js","sources":["../../src/icons/Magnet.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <path\n      d=\"M127.28929,95.02944a24.00012,24.00012,0,0,1,33.60985-.325c9.693,9.33217,9.46338,25.13406-.0509,34.64834L93.83171,194.34449a8,8,0,0,0-.08742,11.3998L122.3982,234.3982a8,8,0,0,0,11.25812.055l66.46192-65.17456C231.30992,138.087,232.21531,87.284,201.25572,55.862a80.00007,80.00007,0,0,0-113.56441-.43051l-66.103,66.91189a8,8,0,0,0,.03429,11.27921l28.65427,28.65427a8,8,0,0,0,11.37925-.0663Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"126.77456\"\n      y1=\"162.39696\"\n      x2=\"166.56227\"\n      y2=\"202.18467\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"53.95657\"\n      y1=\"89.57897\"\n      x2=\"93.74372\"\n      y2=\"129.36612\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M126.77456,162.397l39.78771,39.78771-32.906,32.26858a8,8,0,0,1-11.25812-.055L93.74429,205.74429a8,8,0,0,1,.08742-11.3998Z\"\n      opacity=\"0.2\"\n    />\n    <path\n      d=\"M93.74372,129.36612,53.95657,89.579l-32.3683,32.76438a8,8,0,0,0,.03429,11.27921l28.65427,28.65427a8,8,0,0,0,11.37925-.0663Z\"\n      opacity=\"0.2\"\n    />\n    <path\n      d=\"M127.28929,95.02944a24.00012,24.00012,0,0,1,33.60985-.325c9.693,9.33217,9.46338,25.13406-.0509,34.64834L93.83171,194.34449a8,8,0,0,0-.08742,11.3998L122.3982,234.3982a8,8,0,0,0,11.25812.055l66.46192-65.17456C231.30992,138.087,232.21531,87.284,201.25572,55.862a80.00007,80.00007,0,0,0-113.56441-.43051l-66.103,66.91189a8,8,0,0,0,.03429,11.27921l28.65427,28.65427a8,8,0,0,0,11.37925-.0663Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"126.77456\"\n      y1=\"162.39696\"\n      x2=\"166.56227\"\n      y2=\"202.18467\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"53.95657\"\n      y1=\"89.57897\"\n      x2=\"93.74372\"\n      y2=\"129.36612\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M206.9541,50.24707A87.40283,87.40283,0,0,0,144.58789,24.001C144.47461,24,144.36426,24,144.252,24A87.41952,87.41952,0,0,0,82,49.80957L48.30078,83.92084l-.001.001-.00146.00147L15.89746,116.7207a16.03806,16.03806,0,0,0,.06836,22.55957l28.65332,28.65332a15.889,15.889,0,0,0,11.3125,4.68653h.0957a15.88936,15.88936,0,0,0,11.35157-4.81836l32.0205-32.77661.002-.00171.00293-.003,33.57226-34.36518a16.07987,16.07987,0,0,1,22.374-.18847,15.58821,15.58821,0,0,1,4.72558,11.19629,16.88015,16.88015,0,0,1-4.84472,11.99316l-34.10694,33.07623-.00732.00678-.00391.004L88.2627,188.60156a15.99983,15.99983,0,0,0-.17579,22.79981l28.6543,28.65429a16.052,16.052,0,0,0,22.5166.10938l32.957-32.31885.00489-.00439.00293-.0033,33.55273-32.903C240.22363,140.48633,240.75293,84.55176,206.9541,50.24707ZM55.93359,156.61914,27.2793,127.96582l26.71191-27.03827L82.49512,129.4314Zm72.12207,72.12207L99.40137,200.08789l27.28711-26.46283,28.50439,28.50421Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M127.28929,95.02944a24.00012,24.00012,0,0,1,33.60985-.325c9.693,9.33217,9.46338,25.13406-.0509,34.64834L93.83171,194.34449a8,8,0,0,0-.08742,11.3998L122.3982,234.3982a8,8,0,0,0,11.25812.055l66.46192-65.17456C231.30992,138.087,232.21531,87.284,201.25572,55.862a80.00007,80.00007,0,0,0-113.56441-.43051l-66.103,66.91189a8,8,0,0,0,.03429,11.27921l28.65427,28.65427a8,8,0,0,0,11.37925-.0663Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"126.77456\"\n      y1=\"162.39696\"\n      x2=\"166.56227\"\n      y2=\"202.18467\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"53.95657\"\n      y1=\"89.57897\"\n      x2=\"93.74372\"\n      y2=\"129.36612\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M127.28929,95.02944a24.00012,24.00012,0,0,1,33.60985-.325c9.693,9.33217,9.46338,25.13406-.0509,34.64834L93.83171,194.34449a8,8,0,0,0-.08742,11.3998L122.3982,234.3982a8,8,0,0,0,11.25812.055l66.46192-65.17456C231.30992,138.087,232.21531,87.284,201.25572,55.862a80.00007,80.00007,0,0,0-113.56441-.43051l-66.103,66.91189a8,8,0,0,0,.03429,11.27921l28.65427,28.65427a8,8,0,0,0,11.37925-.0663Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"126.77456\"\n      y1=\"162.39696\"\n      x2=\"166.56227\"\n      y2=\"202.18467\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"53.95657\"\n      y1=\"89.57897\"\n      x2=\"93.74372\"\n      y2=\"129.36612\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M127.28929,95.02944a24.00012,24.00012,0,0,1,33.60985-.325c9.693,9.33217,9.46338,25.13406-.0509,34.64834L93.83171,194.34449a8,8,0,0,0-.08742,11.3998L122.3982,234.3982a8,8,0,0,0,11.25812.055l66.46192-65.17456C231.30992,138.087,232.21531,87.284,201.25572,55.862a80.00007,80.00007,0,0,0-113.56441-.43051l-66.103,66.91189a8,8,0,0,0,.03429,11.27921l28.65427,28.65427a8,8,0,0,0,11.37925-.0663Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"126.77456\"\n      y1=\"162.39696\"\n      x2=\"166.56227\"\n      y2=\"202.18467\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"53.95657\"\n      y1=\"89.57897\"\n      x2=\"93.74372\"\n      y2=\"129.36612\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst Magnet = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nMagnet.displayName = \"Magnet\";\n\nexport default Magnet;\n"],"names":["pathsByWeight","Map","set","color","React","d","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","x1","y1","x2","y2","opacity","renderPath","weight","renderPathForWeight","Magnet","forwardRef","props","ref","IconBase","displayName"],"mappings":";;;;AAAA;AAWA,IAAMA,aAAa,gBAAG,IAAIC,GAAJ,EAAtB;AAEAD,aAAa,CAACE,GAAd,CAAkB,MAAlB,EAA0B,UAACC,KAAD;AAAA,SACxBC,mBAAA,eAAA,MAAA,EACEA,mBAAA,OAAA;AACEC,IAAAA,CAAC,EAAC;AACFC,IAAAA,IAAI,EAAC;AACLC,IAAAA,MAAM,EAAEJ;AACRK,IAAAA,aAAa,EAAC;AACdC,IAAAA,cAAc,EAAC;AACfC,IAAAA,WAAW,EAAC;GANd,CADF,EASEN,mBAAA,OAAA;AACEO,IAAAA,EAAE,EAAC;AACHC,IAAAA,EAAE,EAAC;AACHC,IAAAA,EAAE,EAAC;AACHC,IAAAA,EAAE,EAAC;AACHR,IAAAA,IAAI,EAAC;AACLC,IAAAA,MAAM,EAAEJ;AACRK,IAAAA,aAAa,EAAC;AACdC,IAAAA,cAAc,EAAC;AACfC,IAAAA,WAAW,EAAC;GATd,CATF,EAoBEN,mBAAA,OAAA;AACEO,IAAAA,EAAE,EAAC;AACHC,IAAAA,EAAE,EAAC;AACHC,IAAAA,EAAE,EAAC;AACHC,IAAAA,EAAE,EAAC;AACHR,IAAAA,IAAI,EAAC;AACLC,IAAAA,MAAM,EAAEJ;AACRK,IAAAA,aAAa,EAAC;AACdC,IAAAA,cAAc,EAAC;AACfC,IAAAA,WAAW,EAAC;GATd,CApBF,CADwB;AAAA,CAA1B;AAmCAV,aAAa,CAACE,GAAd,CAAkB,SAAlB,EAA6B,UAACC,KAAD;AAAA,SAC3BC,mBAAA,eAAA,MAAA,EACEA,mBAAA,OAAA;AACEC,IAAAA,CAAC,EAAC;AACFU,IAAAA,OAAO,EAAC;GAFV,CADF,EAKEX,mBAAA,OAAA;AACEC,IAAAA,CAAC,EAAC;AACFU,IAAAA,OAAO,EAAC;GAFV,CALF,EASEX,mBAAA,OAAA;AACEC,IAAAA,CAAC,EAAC;AACFC,IAAAA,IAAI,EAAC;AACLC,IAAAA,MAAM,EAAEJ;AACRK,IAAAA,aAAa,EAAC;AACdC,IAAAA,cAAc,EAAC;AACfC,IAAAA,WAAW,EAAC;GANd,CATF,EAiBEN,mBAAA,OAAA;AACEO,IAAAA,EAAE,EAAC;AACHC,IAAAA,EAAE,EAAC;AACHC,IAAAA,EAAE,EAAC;AACHC,IAAAA,EAAE,EAAC;AACHR,IAAAA,IAAI,EAAC;AACLC,IAAAA,MAAM,EAAEJ;AACRK,IAAAA,aAAa,EAAC;AACdC,IAAAA,cAAc,EAAC;AACfC,IAAAA,WAAW,EAAC;GATd,CAjBF,EA4BEN,mBAAA,OAAA;AACEO,IAAAA,EAAE,EAAC;AACHC,IAAAA,EAAE,EAAC;AACHC,IAAAA,EAAE,EAAC;AACHC,IAAAA,EAAE,EAAC;AACHR,IAAAA,IAAI,EAAC;AACLC,IAAAA,MAAM,EAAEJ;AACRK,IAAAA,aAAa,EAAC;AACdC,IAAAA,cAAc,EAAC;AACfC,IAAAA,WAAW,EAAC;GATd,CA5BF,CAD2B;AAAA,CAA7B;AA2CAV,aAAa,CAACE,GAAd,CAAkB,MAAlB,EAA0B;AAAA,SACxBE,mBAAA,eAAA,MAAA,EACEA,mBAAA,OAAA;AAAMC,IAAAA,CAAC,EAAC;GAAR,CADF,CADwB;AAAA,CAA1B;AAMAL,aAAa,CAACE,GAAd,CAAkB,OAAlB,EAA2B,UAACC,KAAD;AAAA,SACzBC,mBAAA,eAAA,MAAA,EACEA,mBAAA,OAAA;AACEC,IAAAA,CAAC,EAAC;AACFC,IAAAA,IAAI,EAAC;AACLC,IAAAA,MAAM,EAAEJ;AACRK,IAAAA,aAAa,EAAC;AACdC,IAAAA,cAAc,EAAC;AACfC,IAAAA,WAAW,EAAC;GANd,CADF,EASEN,mBAAA,OAAA;AACEO,IAAAA,EAAE,EAAC;AACHC,IAAAA,EAAE,EAAC;AACHC,IAAAA,EAAE,EAAC;AACHC,IAAAA,EAAE,EAAC;AACHR,IAAAA,IAAI,EAAC;AACLC,IAAAA,MAAM,EAAEJ;AACRK,IAAAA,aAAa,EAAC;AACdC,IAAAA,cAAc,EAAC;AACfC,IAAAA,WAAW,EAAC;GATd,CATF,EAoBEN,mBAAA,OAAA;AACEO,IAAAA,EAAE,EAAC;AACHC,IAAAA,EAAE,EAAC;AACHC,IAAAA,EAAE,EAAC;AACHC,IAAAA,EAAE,EAAC;AACHR,IAAAA,IAAI,EAAC;AACLC,IAAAA,MAAM,EAAEJ;AACRK,IAAAA,aAAa,EAAC;AACdC,IAAAA,cAAc,EAAC;AACfC,IAAAA,WAAW,EAAC;GATd,CApBF,CADyB;AAAA,CAA3B;AAmCAV,aAAa,CAACE,GAAd,CAAkB,MAAlB,EAA0B,UAACC,KAAD;AAAA,SACxBC,mBAAA,eAAA,MAAA,EACEA,mBAAA,OAAA;AACEC,IAAAA,CAAC,EAAC;AACFC,IAAAA,IAAI,EAAC;AACLC,IAAAA,MAAM,EAAEJ;AACRK,IAAAA,aAAa,EAAC;AACdC,IAAAA,cAAc,EAAC;AACfC,IAAAA,WAAW,EAAC;GANd,CADF,EASEN,mBAAA,OAAA;AACEO,IAAAA,EAAE,EAAC;AACHC,IAAAA,EAAE,EAAC;AACHC,IAAAA,EAAE,EAAC;AACHC,IAAAA,EAAE,EAAC;AACHR,IAAAA,IAAI,EAAC;AACLC,IAAAA,MAAM,EAAEJ;AACRK,IAAAA,aAAa,EAAC;AACdC,IAAAA,cAAc,EAAC;AACfC,IAAAA,WAAW,EAAC;GATd,CATF,EAoBEN,mBAAA,OAAA;AACEO,IAAAA,EAAE,EAAC;AACHC,IAAAA,EAAE,EAAC;AACHC,IAAAA,EAAE,EAAC;AACHC,IAAAA,EAAE,EAAC;AACHR,IAAAA,IAAI,EAAC;AACLC,IAAAA,MAAM,EAAEJ;AACRK,IAAAA,aAAa,EAAC;AACdC,IAAAA,cAAc,EAAC;AACfC,IAAAA,WAAW,EAAC;GATd,CApBF,CADwB;AAAA,CAA1B;AAmCAV,aAAa,CAACE,GAAd,CAAkB,SAAlB,EAA6B,UAACC,KAAD;AAAA,SAC3BC,mBAAA,eAAA,MAAA,EACEA,mBAAA,OAAA;AACEC,IAAAA,CAAC,EAAC;AACFC,IAAAA,IAAI,EAAC;AACLC,IAAAA,MAAM,EAAEJ;AACRK,IAAAA,aAAa,EAAC;AACdC,IAAAA,cAAc,EAAC;AACfC,IAAAA,WAAW,EAAC;GANd,CADF,EASEN,mBAAA,OAAA;AACEO,IAAAA,EAAE,EAAC;AACHC,IAAAA,EAAE,EAAC;AACHC,IAAAA,EAAE,EAAC;AACHC,IAAAA,EAAE,EAAC;AACHR,IAAAA,IAAI,EAAC;AACLC,IAAAA,MAAM,EAAEJ;AACRK,IAAAA,aAAa,EAAC;AACdC,IAAAA,cAAc,EAAC;AACfC,IAAAA,WAAW,EAAC;GATd,CATF,EAoBEN,mBAAA,OAAA;AACEO,IAAAA,EAAE,EAAC;AACHC,IAAAA,EAAE,EAAC;AACHC,IAAAA,EAAE,EAAC;AACHC,IAAAA,EAAE,EAAC;AACHR,IAAAA,IAAI,EAAC;AACLC,IAAAA,MAAM,EAAEJ;AACRK,IAAAA,aAAa,EAAC;AACdC,IAAAA,cAAc,EAAC;AACfC,IAAAA,WAAW,EAAC;GATd,CApBF,CAD2B;AAAA,CAA7B;;AAmCA,IAAMM,UAAU,GAAmB,SAA7BA,UAA6B,CAACC,MAAD,EAAqBd,KAArB;AAAA,SACjCe,mBAAmB,CAACD,MAAD,EAASd,KAAT,EAAgBH,aAAhB,CADc;AAAA,CAAnC;;AAGA,IAAMmB,MAAM,gBAAGC,UAAU,CAA2B,UAACC,KAAD,EAAQC,GAAR;AAAA,SAClDlB,mBAAA,CAACmB,QAAD;AAAUD,IAAAA,GAAG,EAAEA;KAASD;AAAOL,IAAAA,UAAU,EAAEA;IAA3C,CADkD;AAAA,CAA3B,CAAzB;AAIAG,MAAM,CAACK,WAAP,GAAqB,QAArB;;;;"}