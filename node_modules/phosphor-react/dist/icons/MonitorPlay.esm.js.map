{"version":3,"file":"MonitorPlay.esm.js","sources":["../../src/icons/MonitorPlay.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <polygon\n      points=\"156 120 116 92 116 148 156 120\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <rect\n      x=\"32\"\n      y=\"48\"\n      width=\"192\"\n      height=\"144\"\n      rx=\"16\"\n      transform=\"translate(256 240) rotate(180)\"\n      strokeWidth=\"24\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <line\n      x1=\"160\"\n      y1=\"228\"\n      x2=\"96\"\n      y2=\"228\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M208,48H48A16.00016,16.00016,0,0,0,32,64V176a16.00016,16.00016,0,0,0,16,16H208a16.00016,16.00016,0,0,0,16-16V64A16.00016,16.00016,0,0,0,208,48ZM112,152V88l48,32Z\"\n      opacity=\"0.2\"\n    />\n    <rect\n      x=\"32\"\n      y=\"48\"\n      width=\"192\"\n      height=\"144\"\n      rx=\"16\"\n      transform=\"translate(256 240) rotate(180)\"\n      strokeWidth=\"16\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <line\n      x1=\"160\"\n      y1=\"224\"\n      x2=\"96\"\n      y2=\"224\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polygon\n      points=\"160 120 112 88 112 152 160 120\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M168,224a8.00008,8.00008,0,0,1-8,8H96a8,8,0,0,1,0-16h64A8.00008,8.00008,0,0,1,168,224ZM232,64V176a24.0275,24.0275,0,0,1-24,24H48a24.0275,24.0275,0,0,1-24-24V64A24.02734,24.02734,0,0,1,48,40H208A24.02734,24.02734,0,0,1,232,64Zm-68,56a8.00014,8.00014,0,0,0-3.70508-6.74927l-44-28A7.99989,7.99989,0,0,0,104,92v56a7.99991,7.99991,0,0,0,12.29492,6.74927l44-28A8.00014,8.00014,0,0,0,164,120Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <polygon\n      points=\"160 120 112 88 112 152 160 120\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <rect\n      x=\"32\"\n      y=\"48\"\n      width=\"192\"\n      height=\"144\"\n      rx=\"16\"\n      transform=\"translate(256 240) rotate(180)\"\n      strokeWidth=\"12\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <line\n      x1=\"160\"\n      y1=\"224\"\n      x2=\"96\"\n      y2=\"224\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <polygon\n      points=\"160 120 112 88 112 152 160 120\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <rect\n      x=\"32\"\n      y=\"48\"\n      width=\"192\"\n      height=\"144\"\n      rx=\"16\"\n      transform=\"translate(256 240) rotate(180)\"\n      strokeWidth=\"8\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <line\n      x1=\"160\"\n      y1=\"224\"\n      x2=\"96\"\n      y2=\"224\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <rect\n      x=\"32\"\n      y=\"48\"\n      width=\"192\"\n      height=\"144\"\n      rx=\"16\"\n      transform=\"translate(256 240) rotate(180)\"\n      strokeWidth=\"16\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n    />\n    <line\n      x1=\"160\"\n      y1=\"224\"\n      x2=\"96\"\n      y2=\"224\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polygon\n      points=\"160 120 112 88 112 152 160 120\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst MonitorPlay = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nMonitorPlay.displayName = \"MonitorPlay\";\n\nexport default MonitorPlay;\n"],"names":["pathsByWeight","Map","set","color","React","points","stroke","strokeLinecap","strokeLinejoin","strokeWidth","x","y","width","height","rx","transform","fill","x1","y1","x2","y2","d","opacity","renderPath","weight","renderPathForWeight","MonitorPlay","forwardRef","props","ref","IconBase","displayName"],"mappings":"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"}